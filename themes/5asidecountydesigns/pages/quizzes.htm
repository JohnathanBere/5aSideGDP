title = "Quiz"
layout = "default"
is_hidden = 0

[account]
paramCode = "code"

[session]
security = "user"
redirect = "/#promo-1"

[builderDetails quizDetails]
modelClass = "Gdp\Quiz\Models\Quiz"
identifierValue = "{{ :slug }}"
modelKeyColumn = "slug"
displayColumn = "title"
notFoundMessage = "Record not found"

[builderList questionsList]
modelClass = "Gdp\Quiz\Models\Question"
scope = "-"
displayColumn = "sentence"
noRecordsMessage = "No records found"
detailsPage = "-"
detailsUrlParameter = "id"
pageNumber = "{{ :page }}"

[builderList answersList]
modelClass = "Gdp\Quiz\Models\Answer"
scope = "-"
displayColumn = "caption"
noRecordsMessage = "No records found"
detailsPage = "-"
detailsUrlParameter = "id"
pageNumber = "{{ :page }}"
==
use Gdp\Quiz\Models\Quiz;
use Acme\Profile\Models\Profile;
use Gdp\Quiz\Models\Answer;
use Gdp\Quiz\Models\Question;

public $username;
public $points;

public function user()
{
    if (!Auth::check()) {
        return null;
    }

    return Auth::getUser()->profile;
}

 /* public function score()
{
    if (!Auth::check()) {
        return null;
    }

    try
    {
        return Auth::getUser()->profile->score;
    }
    
    catch(Exception $ex)
    {
        return Redirect::to('user/profile/edit');
    }
} */



public function quizSubmit()
{
    if (!$user = $this->user()) 
    {
        // If the user has no profile, a record is added.
        $user = Auth::getUser()->profile();
        $user->create([
            'username' => 'Edit Profile!'
        ]);
    }
    
    $points = 0;
    $questions = Question::get();
    $answers = Answer::get();
    $quizzes = Quiz::get();
    
     foreach($quizzes as $quiz)
    {
        if($quiz->id)
        {
            foreach($questions as $question)
            {
                if($question->id && $question->quiz_id == $quiz->id)
                {
                    // $choice = $_POST['question-' . $question->id . '-answers'];
                    // identifier, you need unique identifiers for the questions in the array! ^ Above is this variable!
                    foreach($answers as $answer)
                    {
                        
                        try
                        {
                            $choice = $_POST['question-' . $question->id . '-answers'];
                            if($choice == $answer->id && $answer->flag == true /* && $answer->question_id == $question->id */)
                            {
                                $points++;
                            }
                        }
                        catch (Exception $ex)
                        {
                            $slug = $this->param('slug');
                            return Redirect::to('quiz/' . $slug);
                        }
                    }
                    //$count++;
                }
            }
        }
    }
    $totalScore = $points;

    
    // the total_score property of the Eloquent ORM-based $score object makes it possible
    // to initialize the Score record of the current user, or create a new Score record for that user. 
    // YES IT IS THAT POWERFUL.
    // The total_score value will equal the new value of the $points variable. Effectively
    // Adding an amount to the total_score attribute of a SPECIFIC profile's score table.
    if(!$user = $this->user())
    {
        $user = Auth::getUser()->profile;
        
        $user->total_score = $totalScore;
        $user->save();
        return Redirect::to('profile');
    }
    
    
    
    else 
    {
        try
        {
            $user = Auth::getUser()->profile;
            $user->increment('total_score', $totalScore);
            
            $user->save();
            return Redirect::to('profile');
        }
        catch(Exception $ex)
        {
            return Redirect::to('profile');
        }
    }
}
==
{% set quiz = quizDetails.record %}
{% set displayColumn = quizDetails.displayColumn %}
{% set notFoundMessage = quizDetails.notFoundMessage %}

{% set questions = questionsList.records %}
{% set questionsDisplayColumn = questionsList.displayColumn %}
{% set noQuestionsMessage = questionsList.noRecordsMessage %}
{% set questionsPage = questions.detailsPage %}
{% set questionsKeyColumn = questionsList.detailsKeyColumn %}
{% set questionsUrlParameter = questionsList.detailsUrlParameter %}

{% set answers = answersList.records %}
{% set answersDisplayColumn = answersList.displayColumn %}
{% set noAnswersMessage = answersList.noRecordsMessage %}
{% set answersDetailsPage = answersList.detailsPage %}
{% set answersDetailsKeyColumn = answersList.detailsKeyColumn %}
{% set answersDetailsUrlParameter = answersList.detailsUrlParameter %}

<div class="container">
    <div class="row">
    <div class="jumbotron" id="q-jumbotron">
            <div class="container" id="q-container-inner">
                <h1>{{ quiz.title }}</h1>
                <p>{{ quiz.description }}</p>
                <p>Answer <strong>all</strong> the questions in this quiz!</p>
            </div>
    </div>
        <div class="col-md-8 col-md-offset-2">
        {{ form_open({request: 'quizSubmit'}, { model: user.profile }, {'enc-type': 'multipart/form-data'}) }}
            {% for question in questions %}
                {% set quiz = quizDetails.record %}
                {% if question.id and question.quiz_id == quiz.id %}
                <div class="form-group">
                    {{ question.sentence | raw }}
                        {% for answer in answers %}
                            {% if answer.question_id == question.id %}
                                    <div>
                                        <input type="radio" name="question-{{ question.id }}-answers" id="question-{{ question.id }}-answers-{{ answer.id }}" value="{{ answer.id }}" />
                                        <label for="question-{{ question.id }}-answers-{{ answer.id }}">{{ answer.caption }}</label>
                                    </div>
                            {% endif %}
                        {% endfor %}
                </div>
                {% endif %}
            {% endfor %}
            <button type="submit" class="btn btn-success">Submit</button>
        {{ form_close() }}
        </div>
    </div>
</div>